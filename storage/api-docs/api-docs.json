{
    "openapi": "3.0.0",
    "info": {
        "title": "RSS Aggregator API",
        "description": "API documentation for the RSS Aggregator project",
        "version": "1.0.0"
    },
    "paths": {
        "/email/verification-notification": {
            "post": {
                "tags": [
                    "Authorization"
                ],
                "summary": "Resending the Verification Email",
                "description": "Resends the email verification notification",
                "operationId": "auth.verification-notification",
                "responses": {
                    "200": {
                        "description": "Verification link sent!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "A new verification link has been sent to your email address."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Email already verified.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Email already verified."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests"
                    }
                }
            }
        },
        "/login": {
            "post": {
                "tags": [
                    "Authorization"
                ],
                "summary": "Login user",
                "description": "Authenticates user and returns access token",
                "operationId": "auth.login",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "1|sometokenvalue..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/forgot-password": {
            "post": {
                "tags": [
                    "Authorization"
                ],
                "summary": "Forgot Password",
                "description": "Sends password reset token to user email.",
                "operationId": "auth.forgot.password",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PasswordResetRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password reset token sent!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "If an account matching your email exists, you will receive instructions to reset your password shortly."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "tags": [
                    "Authorization"
                ],
                "summary": "Register a new user and get an API token",
                "description": "Registers a new user and returns access token",
                "operationId": "auth.register",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RegisterRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful registration. Returns user token.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Your account has been created. A confirmation link has been sent to your email address."
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "1|aBcDeFgHiJkLmNoPqRsTuVwXyZ1234567890"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "LoginRequest": {
                "required": [
                    "email",
                    "password"
                ],
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email",
                        "maxLength": 255,
                        "example": "user@example.com"
                    },
                    "password": {
                        "description": "Password must be at least 8 characters long and contain mixed case letters, numbers, and symbols.",
                        "type": "string",
                        "format": "password",
                        "example": "P@ssw0rd123!"
                    }
                },
                "type": "object"
            },
            "PasswordResetRequest": {
                "required": [
                    "email"
                ],
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email",
                        "maxLength": 255,
                        "example": "user@example.com"
                    }
                },
                "type": "object"
            },
            "RegisterRequest": {
                "required": [
                    "name",
                    "email",
                    "password",
                    "password_confirmation"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "maxLength": 255,
                        "example": "user@example.com"
                    },
                    "password": {
                        "description": "Password must be at least 8 characters long and contain mixed case letters, numbers, and symbols.",
                        "type": "string",
                        "format": "password",
                        "example": "P@ssw0rd123!"
                    },
                    "password_confirmation": {
                        "description": "Confirmation for the password.",
                        "type": "string",
                        "format": "password",
                        "example": "P@ssw0rd123!"
                    }
                },
                "type": "object"
            },
            "ApiError": {
                "title": "API Error",
                "properties": {
                    "title": {
                        "type": "string",
                        "example": "Resource not found."
                    },
                    "detail": {
                        "type": "string",
                        "example": "The resource you are looking for does not exist."
                    },
                    "instance": {
                        "type": "string",
                        "format": "uri",
                        "example": "http://localhost/api/v1/some/resource"
                    },
                    "code": {
                        "type": "string",
                        "example": "HTTP-404"
                    },
                    "link": {
                        "type": "string",
                        "format": "uri",
                        "example": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/404"
                    }
                },
                "type": "object"
            },
            "ValidationErrorResponse": {
                "title": "Validation Error Response",
                "description": "Standard validation error response format.",
                "properties": {
                    "message": {
                        "type": "string",
                        "example": "The given data was invalid."
                    },
                    "errors": {
                        "description": "An object containing validation errors for each field.",
                        "type": "object",
                        "example": {
                            "email": [
                                "The email has already been taken."
                            ],
                            "password": [
                                "The password confirmation does not match."
                            ]
                        },
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                },
                "type": "object"
            }
        }
    },
    "tags": [
        {
            "name": "Authorization",
            "description": "Authorization"
        }
    ]
}